{"version":3,"sources":["components/Context/Context.js","components/Header/Header.js","components/Content/ContentBanner.js","components/Content/ContentMain.js","components/Content/ContentDetail.js","components/Content/ContentDaily.js","components/Content/ContentAlert.js","components/Content/Content.js","components/Footer/Footer.js","components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","cityDefault","unitsMetric","unitsImperial","unitsMetricTemp","unitsMetricWindSpeed","unitsImperialTemp","unitsImperialWindSpeed","Context","React","createContext","Provider","state","cityId","cityFullName","temperatureUnit","windSpeedUnit","currentWeather","oneCall","alerts","loading","refetchAPI","cityID","metricID","showWeather","a","fetch","response","status","Error","statusText","unitTemp","unitWindSpeed","json","data","name","sys","country","cityLon","coord","lon","cityLat","lat","response2","data2","daily","splice","alert","setState","message","this","value","props","children","Component","Consumer","Header","useState","metric","setMetric","className","href","onSubmit","event","preventDefault","target","txtSearch","handleSubmit","id","type","placeholder","aria-label","aria-describedby","defaultValue","htmlFor","onChange","selItem","handleChange","ContentBanner","sidebar","src","image","alt","ContentMain","Date","dt","toLocaleString","month","day","hour","minute","Math","round","main","temp","weather","description","icon","temp_min","temp_max","ContentDetail","morn","feels_like","eve","night","current","wind_speed","pressure","humidity","uvi","sunrise","sunset","ContentDaily","map","index","toLocaleDateString","weekday","max","min","ContentAlert","sender_name","start","end","Content","Footer","rel","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0487a81.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst apiKey = 'bf2ab7434f1583f2e87f12808e45b585'\r\n\r\nconst cityDefault = 'Vancouver, CA'\r\n\r\n// const unitsStandard = 'standard' // Temperature in Kelvin\r\nconst unitsMetric = 'metric' // Temperature in Celsius\r\nconst unitsImperial = 'imperial' // Temperature in Fahrenheit\r\n\r\nconst unitsMetricTemp = 'C'\r\nconst unitsMetricWindSpeed = 'm/s'\r\nconst unitsImperialTemp = 'F'\r\nconst unitsImperialWindSpeed = 'mph'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default class Provider extends React.Component {\r\n    state = {\r\n        cityId: '',\r\n        cityFullName: '',\r\n        temperatureUnit: '',\r\n        windSpeedUnit: '',\r\n        currentWeather: [],\r\n        oneCall: [],\r\n        alerts: false,\r\n        loading: true,\r\n        refetchAPI: (cityID, metricID) => {\r\n            this.showWeather(cityID, metricID)\r\n        }\r\n    }\r\n\r\n    showWeather = async (cityID = cityDefault, metricID = unitsMetric) => {\r\n        try {\r\n            // Current Weather Data API\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityID}&units=${metricID}&appid=${apiKey}`)\r\n\r\n            // check for response status\r\n            if (response.status !== 200) {\r\n                if (response.status === 404) throw Error(`City not found. To make search more precise put the city's name, comma, 2-letter country code (ISO3166).`)\r\n                else throw Error(`Oops, something went wrong! (${response.status}: ${response.statusText})`)\r\n            }\r\n\r\n            const unitTemp = (metricID === unitsMetric) ? unitsMetricTemp : (metricID === unitsImperial) ? unitsImperialTemp : ''\r\n            const unitWindSpeed = (metricID === unitsMetric) ? unitsMetricWindSpeed : (metricID === unitsImperial) ? unitsImperialWindSpeed : ''\r\n\r\n            let data = await response.json()\r\n\r\n            const cityFullName = `${data.name}, ${data.sys.country}`\r\n            const cityLon = data.coord.lon\r\n            const cityLat = data.coord.lat\r\n\r\n            // One Call API\r\n            const response2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${cityLat}&lon=${cityLon}&exclude=minutely,hourly&units=${metricID}&appid=${apiKey}`)\r\n\r\n            // check for response status\r\n            if (response2.status !== 200) throw Error(`${response2.status}: ${response2.statusText}`)\r\n\r\n            let data2 = await response2.json()\r\n\r\n            // keep the first 5 items on the array\r\n            data2.daily.splice(5)\r\n\r\n            let alert = false\r\n\r\n            // check for alerts\r\n            if ('alerts' in data2) alert = true\r\n\r\n            this.setState({\r\n                cityId: cityID,\r\n                cityFullName: cityFullName,\r\n                temperatureUnit: unitTemp,\r\n                windSpeedUnit: unitWindSpeed,\r\n                currentWeather: data,\r\n                oneCall: data2,\r\n                alerts: alert,\r\n                loading: false\r\n            })\r\n        }\r\n        catch(err) {\r\n            alert(err.message)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showWeather()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer","import React, {useState} from 'react'\r\n\r\nimport { Consumer } from '../Context/Context'\r\nimport { BsSearch } from \"react-icons/bs\"\r\n\r\nconst Header = () => {\r\n    const [metric, setMetric] = useState('metric')\r\n\r\n    const handleSubmit = (event, refetchAPI) => {\r\n        event.preventDefault()\r\n\r\n        const cityId = event.target.txtSearch.value\r\n\r\n        refetchAPI(cityId, metric)\r\n    }\r\n\r\n    const handleChange = (event, refetchAPI, cityId) => {\r\n        let selItem = event.target.value\r\n\r\n        refetchAPI(cityId, selItem)\r\n        setMetric(selItem)\r\n    }\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => (\r\n                <header>\r\n                    <nav className=\"navbar navbar-light terciary-bg-color\">\r\n                        <div className=\"container-fluid\">\r\n                            <a href=\"/\" className=\"navbar-brand\">The Weather App</a>\r\n\r\n                            <form className=\"d-flex form-search\" onSubmit={(event) => handleSubmit(event, value.refetchAPI)}>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"form-floating\">\r\n                                        <input id=\"txt-search\" name=\"txtSearch\" type=\"text\" className=\"form-control form-control-sm\" placeholder=\"search for location\" aria-label=\"search\" aria-describedby=\"\" defaultValue={value.cityId} />\r\n                                        <label htmlFor=\"txt-search\">search for location</label>\r\n                                    </div>\r\n                                    <button id=\"btn-search\" className=\"btn btn-outline-secondary btn-sm\" type=\"button\"><BsSearch /></button>\r\n                                </div>                        \r\n                            </form>\r\n\r\n                            <form className=\"d-flex form-metric\">\r\n                                <div className=\"form-floating\">\r\n                                    <select defaultValue={metric} id=\"sel-metric\" className=\"form-select form-select-sm\" aria-label=\"\" onChange={(event) => handleChange(event, value.refetchAPI, value.cityId)}>\r\n                                        <option value=\"metric\">&deg;C, m/s</option>\r\n                                        <option value=\"imperial\">&deg;F, mph</option>\r\n                                    </select>\r\n                                    <label htmlFor=\"sel-metric\">select metric</label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst ContentBanner = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {props.sidebar\r\n            ?\r\n                <div className=\"col-12\">\r\n                    <div className=\"column-container\">\r\n                        <img src={props.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div className=\"col-12 text-center\">\r\n                    <img src={props.image} alt=\"\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentBanner","import React from 'react'\r\n\r\nimport { Consumer } from '../Context/Context'\r\n\r\nconst ContentMain = () => {\r\n    return (\r\n        <Consumer>\r\n            {value => (\r\n                <div className=\"col-12 main-column\">\r\n                    {!value.loading\r\n                    ?\r\n                        (\r\n                            <div className=\"column-container\">\r\n                                <div className=\"column-title\">\r\n                                    <h2>{value.currentWeather.name}, {value.currentWeather.sys.country}</h2>\r\n                                    <p className=\"date-time\">{new Date(value.currentWeather.dt * 1000).toLocaleString('en-us', {month: \"short\", day: \"2-digit\", hour: '2-digit', minute: '2-digit'})}</p>\r\n                                </div>\r\n\r\n                                <div className=\"column-content\">\r\n                                    <div className=\"column-content-text\">\r\n                                        <p className=\"temperature\">{Math.round(value.currentWeather.main.temp)}&deg;{value.temperatureUnit}</p>\r\n                                        <p className=\"description\">{value.currentWeather.weather[0].description}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"column-content-image\">\r\n                                        <img src={`http://openweathermap.org/img/wn/${value.currentWeather.weather[0].icon}@2x.png`} alt={value.currentWeather.weather[0].description} />\r\n                                        <p className=\"temp-min-max text-center\">{Math.round(value.currentWeather.main.temp_min)} / {Math.round(value.currentWeather.main.temp_max)}&deg;{value.temperatureUnit}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default ContentMain","import React from 'react'\r\n\r\nimport { Consumer } from '../Context/Context'\r\n\r\nconst ContentDetail = () => {\r\n    return (\r\n        <Consumer>\r\n            {value => (\r\n                <div className=\"col-12 detail-column\">\r\n                    {!value.loading\r\n                    ?\r\n                        (\r\n                            <div className=\"column-container\">\r\n                                <div className=\"column-title\">\r\n                                    <h2>Weather today in {value.cityFullName}</h2>\r\n                                </div>\r\n\r\n                                <div className=\"column-content\">\r\n                                    <div className=\"column-content-text-period\">\r\n                                        <div className=\"period-item text-center\"><p className=\"fw-bold\">Morning</p><p className=\"temperature\">{Math.round(value.oneCall.daily[0].temp.morn)}&deg;{value.temperatureUnit}</p><p className=\"feels-like\">(feels like {Math.round(value.oneCall.daily[0].feels_like.morn)}&deg;{value.temperatureUnit})</p></div>\r\n                                        <div className=\"period-item text-center\"><p className=\"fw-bold\">Afternoon</p><p className=\"temperature\">{Math.round(value.oneCall.daily[0].temp.day)}&deg;{value.temperatureUnit}</p><p className=\"feels-like\">(feels like {Math.round(value.oneCall.daily[0].feels_like.day)}&deg;{value.temperatureUnit})</p></div>\r\n                                        <div className=\"period-item text-center\"><p className=\"fw-bold\">Evening</p><p className=\"temperature\">{Math.round(value.oneCall.daily[0].temp.eve)}&deg;{value.temperatureUnit}</p><p className=\"feels-like\">(feels like {Math.round(value.oneCall.daily[0].feels_like.eve)}&deg;{value.temperatureUnit})</p></div>\r\n                                        <div className=\"period-item text-center\"><p className=\"fw-bold\">Night</p><p className=\"temperature\">{Math.round(value.oneCall.daily[0].temp.night)}&deg;{value.temperatureUnit}</p><p className=\"feels-like\">(feels like {Math.round(value.oneCall.daily[0].feels_like.night)}&deg;{value.temperatureUnit})</p></div>\r\n                                    </div>\r\n\r\n                                    <div className=\"column-content-text-detail\">\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">wind</span><span> {value.oneCall.current.wind_speed} {value.windSpeedUnit}</span></p>\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">pressure</span><span> {value.oneCall.current.pressure} hPa</span></p>\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">humidity</span><span> {value.oneCall.current.humidity}%</span></p>\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">uv</span><span> {Math.round(value.oneCall.current.uvi)}</span></p>\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">sunrise</span><span> {new Date(value.oneCall.current.sunrise * 1000).toLocaleString('en-us', {hour: '2-digit', minute: '2-digit'})}</span></p>\r\n                                        <p className=\"detail-item\"><span className=\"fw-bold\">sunset</span><span> {new Date(value.oneCall.current.sunset * 1000).toLocaleString('en-us', {hour: '2-digit', minute: '2-digit'})}</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default ContentDetail","import React from 'react'\r\n\r\nimport { Consumer } from '../Context/Context'\r\n\r\nconst ContentDaily = () => {\r\n    return (\r\n        <Consumer>\r\n            {value => (\r\n                <div className=\"col-12 daily-column\">\r\n                    {!value.loading\r\n                    ?\r\n                        (\r\n                            <div className=\"column-container\">\r\n                                <div className=\"column-title\">\r\n                                    <h2>Daily forecast</h2>\r\n                                </div>\r\n\r\n                                <div className=\"column-content\">\r\n                                    <div className=\"column-content-text-forecast\">\r\n                                        {value.oneCall.daily.map((daily, index) => (\r\n                                            <div className=\"forecast-item text-center\" key={index}>\r\n                                                <p className=\"fw-bold\">{index !== 0 ? new Date(daily.dt * 1000).toLocaleDateString('en-us', {weekday: \"short\"}) + ' ' + new Date(daily.dt * 1000).toLocaleDateString('en-us', {day: \"2-digit\"}) : 'Today'}</p>\r\n                                                <p className=\"temperature\">{Math.round(daily.temp.max)} / {Math.round(daily.temp.min)}&deg;{value.temperatureUnit}</p>\r\n                                                <img src={`http://openweathermap.org/img/wn/${daily.weather[0].icon}@2x.png`} alt={daily.weather[0].description} />\r\n                                                <p className=\"description\">{daily.weather[0].description}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default ContentDaily","import React from 'react'\r\n\r\nimport { Consumer } from '../Context/Context'\r\n\r\nconst ContentAlert = () => {\r\n    return (\r\n        <Consumer>\r\n            {value => (\r\n                <div className=\"col-12 alert-column\">\r\n                    {!value.loading\r\n                    ?\r\n                        value.alerts\r\n                        ?\r\n                            (\r\n                                <div className=\"column-container\">\r\n                                    <div className=\"column-title\">\r\n                                        <h2>{value.oneCall.alerts[0].event}</h2>\r\n                                    </div>\r\n\r\n                                    <div className=\"column-content\">\r\n                                        <div className=\"column-content-text\">\r\n                                            <p><span className=\"fw-bold\">Sender:</span> {value.oneCall.alerts[0].sender_name}</p>\r\n                                            <p><span className=\"fw-bold\">Start date:</span> {new Date(value.oneCall.alerts[0].start * 1000).toLocaleString('en-us', {month: \"short\", day: \"2-digit\", hour: '2-digit', minute: '2-digit'})}</p>\r\n                                            <p><span className=\"fw-bold\">End date:</span> {new Date(value.oneCall.alerts[0].end * 1000).toLocaleString('en-us', {month: \"short\", day: \"2-digit\", hour: '2-digit', minute: '2-digit'})}</p>\r\n                                            <br />\r\n                                            <p>{value.oneCall.alerts[0].description}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        :\r\n                            (\r\n                                <div className=\"column-container\">\r\n                                    <div className=\"column-title\">\r\n                                        <h2>Alerts</h2>\r\n                                    </div>\r\n\r\n                                    <div className=\"column-content\">\r\n                                        <div className=\"column-content-text\">\r\n                                            <p>There are no alerts for the region!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                    :\r\n                        ''\r\n                    }\r\n                </div>\r\n            )}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default ContentAlert","import React from 'react'\r\n\r\nimport ContentBanner from './ContentBanner'\r\nimport ContentMain from './ContentMain'\r\nimport ContentDetail from './ContentDetail'\r\nimport ContentDaily from './ContentDaily'\r\nimport ContentAlert from './ContentAlert'\r\n\r\nconst Content = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <section className=\"sec-advertisment\">\r\n                <div className=\"container\">\r\n                    <ContentBanner\r\n                        sidebar={false}\r\n                        image=\"https://s0.2mdn.net/8015881/TELGH9448_Q121_HS_WholeHome_Bundle_Updates_Digital_IAB_728x90_vf.jpg\"\r\n                    />\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"sec-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col content\">\r\n                            <div className=\"row\">\r\n                                <ContentMain />\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <ContentDetail />\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <ContentDaily />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-auto sidebar\">\r\n                            <ContentBanner\r\n                                sidebar={true}\r\n                                image=\"https://tpc.googlesyndication.com/simgad/3485860487660447482\"\r\n                            />\r\n\r\n                            <div className=\"row\">\r\n                                <ContentAlert />\r\n                            </div>\r\n\r\n                            <ContentBanner\r\n                                sidebar={true}\r\n                                image=\"https://media.bidr.io/districtm/64/226/2576_buttandco_st-vpat2021_300x250.jpg\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p className=\"text-center\">&copy; 2021 The Weather App. Powered by <a href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noreferrer\">OpenWeatherMap</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport Provider from '../Context/Context'\r\nimport Header from '../Header/Header'\r\nimport Content from '../Content/Content'\r\nimport Footer from '../Footer/Footer'\r\n\r\nimport '../../scss/main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Provider>\r\n            <Header />\r\n            <Content />\r\n            <Footer />\r\n        </Provider>\r\n    ) \r\n}\r\n\r\nexport default Main","import Main from './components/Main/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <Main />\r\n  );\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}